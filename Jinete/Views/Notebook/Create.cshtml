@using Jinete.ViewModels
@model NotebookViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Notebook</h4>
        @foreach (var item in Model._firstNames)
        { 
            <p>@Html.DisplayFor(model => model._firstNames) @Html.DisplayFor(model => model._lastNames) @Html.DisplayFor(model => model._userIds)</p>
        }
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.ComputerName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.ComputerName)
                @Html.ValidationMessageFor(model => model._notebook.ComputerName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.PersonFirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.PersonFirstName)
                @Html.ValidationMessageFor(model => model._notebook.PersonFirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.PersonLastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.PersonLastName)
                @Html.ValidationMessageFor(model => model._notebook.PersonLastName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.Phone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.Phone)
                @Html.ValidationMessageFor(model => model._notebook.Phone)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.Address)
                @Html.ValidationMessageFor(model => model._notebook.Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.City)
                @Html.ValidationMessageFor(model => model._notebook.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.State)
                @Html.ValidationMessageFor(model => model._notebook.State)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.Zip, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.Zip)
                @Html.ValidationMessageFor(model => model._notebook.Zip)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.Email)
                @Html.ValidationMessageFor(model => model._notebook.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.dtCheckedOut, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.dtCheckedOut)
                @Html.ValidationMessageFor(model => model._notebook.dtCheckedOut)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.dtReturned, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.dtReturned)
                @Html.ValidationMessageFor(model => model._notebook.dtReturned)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.checkedIn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.checkedIn)
                @Html.ValidationMessageFor(model => model._notebook.checkedIn)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
