@using Jinete.ViewModels
@using Resources
@model NotebookEditModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Notebook</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.EquipmentName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.EquipmentName)
                @Html.ValidationMessageFor(model => model._notebook.EquipmentName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.SerialNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.SerialNumber)
                @Html.ValidationMessageFor(model => model._notebook.SerialNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.PurchasePrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.PurchasePrice)
                @Html.ValidationMessageFor(model => model._notebook.PurchasePrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.Discarded, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.Discarded)
                @Html.ValidationMessageFor(model => model._notebook.Discarded)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model._notebook.LostOrStolen, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model._notebook.LostOrStolen)
                @Html.ValidationMessageFor(model => model._notebook.LostOrStolen)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Users, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m._notebook.ApplicationUserId, Model.Users, "Select a new user:", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Users)
            </div>
        </div>

    @if (Model._notebook.CheckoutId != null)
    {
        <table class="table">
            <tr>
                <th>
                    @Equipment.Actions
                </th>
                <th>
                    @Equipment.UserName
                </th>
                <th>
                    @Equipment.CheckedOut
                </th>
                <th>
                    @Equipment.CheckedIn
                </th>
            </tr>

            @foreach (var item in Model._checkouts)
            {
                <tr>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "Checkout", item.CheckoutId, new { id = item.CheckoutId })<br />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Username)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dtCheckedOut);
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.dtReturned);
                    </td>
                </tr>
            }
            </table>
        }
        else
    {
        <p>This item has not been checked out.</p>
    }
            
            @if (Model._sale != null)
            { 
            <table>
                <tr>
                    <th>Sold on</th>
                    <th>Amount</th>
                <tr>
                    @Html.DisplayFor(model => model._sale.dtSold)
                </tr>
                <tr>
                    @Html.DisplayFor(model => model._sale.SalePrice)
                </tr>
            </table>
            }
            else
            {
                @Html.HiddenFor(model => model._sale.SaleId)
                <div class="form-group">
                    @Html.LabelFor(model => model._sale.dtSold, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model._sale.dtSold)
                        @Html.ValidationMessageFor(model => model._sale.dtSold)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model._sale.SalePrice, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model._sale.SalePrice)
                        @Html.ValidationMessageFor(model => model._sale.SalePrice)
                    </div>
                </div>
            }
            
            @Html.HiddenFor(model => model._notebook.ApplicationUserId)
            @Html.HiddenFor(model => model._notebook.NotebookId)
            @Html.HiddenFor(model => model._notebook.SaleId)

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
